// Transactions
syntax = "proto3";
option java_package = "com.wavesplatform.transaction.protobuf";
import "scalapb/scalapb.proto";

option (scalapb.options) = {
  import: "com.wavesplatform.serialization.protobuf.utils._"
  flat_package: true
};

message Transaction {
    option (scalapb.message).extends = "com.wavesplatform.transaction.protobuf.PBTransaction";
    option (scalapb.message).companion_extends = "com.wavesplatform.transaction.protobuf.PBTransactionCompanion";

    bytes assetId = 1 [(scalapb.field).type = "com.wavesplatform.transaction.AssetId"];
    bytes sender = 2 [(scalapb.field).type = "com.wavesplatform.account.PublicKeyAccount"];
    uint64 timestamp = 3;
    uint64 fee = 4;
    bytes feeAssetId = 5 [(scalapb.field).type = "com.wavesplatform.transaction.AssetId"];
    bytes attachment = 6 [(scalapb.field).type = "com.wavesplatform.common.state.ByteStr"];
    Data data = 7;
    WrappedProofs proofs = 8 [(scalapb.field).type = "com.wavesplatform.transaction.Proofs"];

    message WrappedProofs {
        repeated bytes proofs = 1 [(scalapb.field).type = "com.wavesplatform.common.state.ByteStr"];
    }

    message Data {
        oneof data {
            MassTransferData massTransfer = 11;
        }
    };
};

message MassTransferData {
    message Transfer {
        bytes address = 1 [(scalapb.field).type = "com.wavesplatform.account.AddressOrAlias"];
        uint64 amount = 2;
    };

    repeated Transfer transfers = 3;
};